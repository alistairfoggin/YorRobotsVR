//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.RclInterfaces
{
    [Serializable]
    public class ParameterDescriptorMsg : Message
    {
        public const string k_RosMessageName = "rcl_interfaces/ParameterDescriptor";
        public override string RosMessageName => k_RosMessageName;

        //  This is the message to communicate a parameter's descriptor.
        //  The name of the parameter.
        public string name;
        //  Enum values are defined in the `ParameterType.msg` message.
        public byte type;
        //  Description of the parameter, visible from introspection tools.
        public string description;
        //  Parameter constraints
        //  Plain English description of additional constraints which cannot be expressed
        //  with the available constraints, e.g. "only prime numbers".
        // 
        //  By convention, this should only be used to clarify constraints which cannot
        //  be completely expressed with the parameter constraints below.
        public string additional_constraints;
        //  If 'true' then the value cannot change after it has been initialized.
        public bool read_only;
        //  If true, the parameter is allowed to change type.
        public bool dynamic_typing;
        //  If any of the following sequences are not empty, then the constraint inside of
        //  them apply to this parameter.
        // 
        //  FloatingPointRange and IntegerRange are mutually exclusive.
        //  FloatingPointRange consists of a from_value, a to_value, and a step.
        public FloatingPointRangeMsg[] floating_point_range;
        //  IntegerRange consists of a from_value, a to_value, and a step.
        public IntegerRangeMsg[] integer_range;

        public ParameterDescriptorMsg()
        {
            this.name = "";
            this.type = 0;
            this.description = "";
            this.additional_constraints = "";
            this.read_only = false;
            this.dynamic_typing = false;
            this.floating_point_range = new FloatingPointRangeMsg[0];
            this.integer_range = new IntegerRangeMsg[0];
        }

        public ParameterDescriptorMsg(string name, byte type, string description, string additional_constraints, bool read_only, bool dynamic_typing, FloatingPointRangeMsg[] floating_point_range, IntegerRangeMsg[] integer_range)
        {
            this.name = name;
            this.type = type;
            this.description = description;
            this.additional_constraints = additional_constraints;
            this.read_only = read_only;
            this.dynamic_typing = dynamic_typing;
            this.floating_point_range = floating_point_range;
            this.integer_range = integer_range;
        }

        public static ParameterDescriptorMsg Deserialize(MessageDeserializer deserializer) => new ParameterDescriptorMsg(deserializer);

        private ParameterDescriptorMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.name);
            deserializer.Read(out this.type);
            deserializer.Read(out this.description);
            deserializer.Read(out this.additional_constraints);
            deserializer.Read(out this.read_only);
            deserializer.Read(out this.dynamic_typing);
            deserializer.Read(out this.floating_point_range, FloatingPointRangeMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.integer_range, IntegerRangeMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.name);
            serializer.Write(this.type);
            serializer.Write(this.description);
            serializer.Write(this.additional_constraints);
            serializer.Write(this.read_only);
            serializer.Write(this.dynamic_typing);
            serializer.WriteLength(this.floating_point_range);
            serializer.Write(this.floating_point_range);
            serializer.WriteLength(this.integer_range);
            serializer.Write(this.integer_range);
        }

        public override string ToString()
        {
            return "ParameterDescriptorMsg: " +
            "\nname: " + name.ToString() +
            "\ntype: " + type.ToString() +
            "\ndescription: " + description.ToString() +
            "\nadditional_constraints: " + additional_constraints.ToString() +
            "\nread_only: " + read_only.ToString() +
            "\ndynamic_typing: " + dynamic_typing.ToString() +
            "\nfloating_point_range: " + System.String.Join(", ", floating_point_range.ToList()) +
            "\ninteger_range: " + System.String.Join(", ", integer_range.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
