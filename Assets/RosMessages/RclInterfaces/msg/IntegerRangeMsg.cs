//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.RclInterfaces
{
    [Serializable]
    public class IntegerRangeMsg : Message
    {
        public const string k_RosMessageName = "rcl_interfaces/IntegerRange";
        public override string RosMessageName => k_RosMessageName;

        //  Represents bounds and a step value for an integer typed parameter.
        //  Start value for valid values, inclusive.
        public long from_value;
        //  End value for valid values, inclusive.
        public long to_value;
        //  Size of valid steps between the from and to bound.
        // 
        //  A step value of zero implies a continuous range of values. Ideally, the step
        //  would be less than or equal to the distance between the bounds, as well as an
        //  even multiple of the distance between the bounds, but neither are required.
        // 
        //  If the absolute value of the step is larger than or equal to the distance
        //  between the two bounds, then the bounds will be the only valid values. e.g. if
        //  the range is defined as {from_value: 1, to_value: 2, step: 5} then the valid
        //  values will be 1 and 2.
        //  
        //  If the step is less than the distance between the bounds, but the distance is
        //  not a multiple of the step, then the "to" bound will always be a valid value,
        //  e.g. if the range is defined as {from_value: 2, to_value: 5, step: 2} then
        //  the valid values will be 2, 4, and 5.
        public ulong step;

        public IntegerRangeMsg()
        {
            this.from_value = 0;
            this.to_value = 0;
            this.step = 0;
        }

        public IntegerRangeMsg(long from_value, long to_value, ulong step)
        {
            this.from_value = from_value;
            this.to_value = to_value;
            this.step = step;
        }

        public static IntegerRangeMsg Deserialize(MessageDeserializer deserializer) => new IntegerRangeMsg(deserializer);

        private IntegerRangeMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.from_value);
            deserializer.Read(out this.to_value);
            deserializer.Read(out this.step);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.from_value);
            serializer.Write(this.to_value);
            serializer.Write(this.step);
        }

        public override string ToString()
        {
            return "IntegerRangeMsg: " +
            "\nfrom_value: " + from_value.ToString() +
            "\nto_value: " + to_value.ToString() +
            "\nstep: " + step.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
